{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview WORKPLACE TRANSFORMATION LEADERS Introduction Through the integration of traditionally disparate technology based systems, and the delivery of related consulting services Smart Deskers will facilitate the creation of integrated and connected workspaces. Smart Deskers will participate in all phases of the workspace life-cycle from Design, Implementation, through to Management. At each stage the appropriate use of data-driven technologies will provide quantitative information to ensure that designs are fit for purpose, implementation is undertaken efficiently, and resource utilisation is optimised. To achieve this SmartDeskers will work with Office Designers and Architects, and Managers of Facilities, IT, and People. Systems integration may include: Monitoring of the workspace environment and utilisation Building Management Energy Management Resource Management e.g. Room booking. Vision SmartDeskers: Vision To be a leader in integrated workspaces from design through to day-to-day management. Problem to Solve Smartdeskers provide workplace occupancy support for your business helping to make your office more efficient and more productive Saving time, space and money Savings can be spent on improving the remaining office spaces \u2013 designing \u2018feel good spaces\u2019 \u2013 lounge areas, breakout zones, plants and other office features Savings can be reallocated to improve and enhance digital resources Creates a more collaborative environment and increases interaction between staff Presents a tidy and minimalist appearance A flexible solution for remote office workers, freelancers and consultants Creates a more equal non-hierarchical office environment Read Mores","title":"Overview"},{"location":"#overview","text":"WORKPLACE TRANSFORMATION LEADERS","title":"Overview"},{"location":"#introduction","text":"Through the integration of traditionally disparate technology based systems, and the delivery of related consulting services Smart Deskers will facilitate the creation of integrated and connected workspaces. Smart Deskers will participate in all phases of the workspace life-cycle from Design, Implementation, through to Management. At each stage the appropriate use of data-driven technologies will provide quantitative information to ensure that designs are fit for purpose, implementation is undertaken efficiently, and resource utilisation is optimised. To achieve this SmartDeskers will work with Office Designers and Architects, and Managers of Facilities, IT, and People. Systems integration may include: Monitoring of the workspace environment and utilisation Building Management Energy Management Resource Management e.g. Room booking.","title":"Introduction"},{"location":"#vision","text":"SmartDeskers: Vision To be a leader in integrated workspaces from design through to day-to-day management.","title":"Vision"},{"location":"#problem-to-solve","text":"Smartdeskers provide workplace occupancy support for your business helping to make your office more efficient and more productive Saving time, space and money Savings can be spent on improving the remaining office spaces \u2013 designing \u2018feel good spaces\u2019 \u2013 lounge areas, breakout zones, plants and other office features Savings can be reallocated to improve and enhance digital resources Creates a more collaborative environment and increases interaction between staff Presents a tidy and minimalist appearance A flexible solution for remote office workers, freelancers and consultants Creates a more equal non-hierarchical office environment","title":"Problem to Solve"},{"location":"#read-mores","text":"","title":"Read Mores"},{"location":"AlphaDev/Trigger/","text":"Trigger We have some procedure to run to create: lcci_zonedailyprofile lcci_zoneocc lcci_temperature 1. P_LCCI_01 CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `P_LCCI_01` ( IN `IgnoreWeekends` tinyint ( 1 )) DETERMINISTIC BEGIN /* ******************************************************************* * Create table of parameters used primarily by the LCCI Dashboard * ******************************************************************* */ DROP TABLE IF EXISTS `OM_2101` . `LCCI_Params` ; CREATE TABLE `OM_2101` . `LCCI_Params` ( Param VARCHAR ( 30 ), Value VARCHAR ( 30 ) ); INSERT INTO `OM_2101` . `LCCI_Params` VALUES ( \"Profile Zone Name\" , \"Meeting Room 7\" ), ( \"Profile Start Date\" , \"01/06/18\" ), ( \"Profile Stop Date\" , \"30/06/18\" ), ( \"Profile Date\" , \"25/06/18\" ); /* ************************************************************** * Create table tracking only Occupancy Start and Stop times. * ************************************************************** */ DROP TABLE IF EXISTS `OM_2101` . `LCCI_ZoneOcc` ; CREATE TABLE `OM_2101` . `LCCI_ZoneOcc` ( Zone VARCHAR ( 50 ), start DATETIME ( 3 ), stop DATETIME ( 3 ), duration TIME ( 3 ) ); INSERT INTO `OM_2101` . `LCCI_ZoneOcc` SELECT Zone , start , stop , TIMEDIFF ( stop , start ) AS duration FROM ( SELECT Status , ( @ vzone <> Zone ) AS new_zone , @ vstart : = IF ( Status = \"Occ\" AND @ vstart IS NULL , `DateTime` , @ vstart ), @ vfirststart : = IF ( Status = \"Unocc\" , @ vstart , `DateTime` ) AS start , @ vstart : = IF ( Status = \"Unocc\" , NULL , @ vstart ), @ vstop : = IF ( Status = \"Unocc\" , `DateTime` , NULL ) AS stop , @ vzone : = Zone AS Zone FROM `OM_2101` . `OMzoneocc` -- WHERE Zone = \"Rectangular Table 1\" -- For debugging only ORDER BY Zone , `DateTime` ) AS tmp , ( SELECT @ vstart : = NULL , @ vfirststart : = NULL , @ vstop : = NULL , @ vzone : = NULL ) AS vars WHERE new_zone = 0 AND start IS NOT NULL AND stop IS NOT NULL ; -- ********************************* -- * Create a view of unique dates * -- ********************************* CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . `v_lcci_dates` ( date ) AS SELECT DISTINCT DATE ( `OM_2101` . `LCCI_ZoneOcc` . `start` ) AS `date` FROM `OM_2101` . `LCCI_ZoneOcc` ; -- ********************************* -- * Create a view of unique zones * -- ********************************* CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . `v_lcci_zones` ( zone ) AS SELECT DISTINCT `OM_2101` . `LCCI_ZoneOcc` . `zone` AS `zone` FROM `OM_2101` . `LCCI_ZoneOcc` ; -- ********************************************************************************************** -- * Cross join the zones and dates and hours to create a zone / date / hour / zoneuse template * -- ********************************************************************************************** DROP TABLE IF EXISTS `LCCI_ZoneDailyProfile` ; CREATE TABLE `LCCI_ZoneDailyProfile` ( Zone VARCHAR ( 50 ), Date DATE , Hour TINYINT , ZoneUse FLOAT ); INSERT INTO `LCCI_ZoneDailyProfile` SELECT OM_2101 . `v_lcci_zones` . zone AS Zone , OM_2101 . `v_lcci_dates` . date AS Date , myseq . seq AS Hour , 0 AS ZoneUse FROM seq_0_to_23 AS myseq JOIN OM_2101 . `v_lcci_dates` JOIN OM_2101 . `v_lcci_zones` WHERE NOT ( IgnoreWeekends = TRUE AND ( DAYOFWEEK ( Date ) = 1 OR DAYOFWEEK ( Date ) = 7 )); -- **************************************** -- * Populate lcci_zonedailyprofile table * -- **************************************** UPDATE `LCCI_ZoneDailyProfile` AS t1 SET zoneuse = ( SELECT IFNULL ( SUM ( DAILYPROFILE ( TIMESTAMPADD ( HOUR , t1 . Hour , t1 . Date ), TIMESTAMPADD ( HOUR , HOUR ( t2 . start ), DATE ( t2 . start )), TIMESTAMPADD ( HOUR , HOUR ( t2 . stop ), DATE ( t2 . stop )), t2 . start , t2 . stop , t2 . duration )), 0 ) FROM `LCCI_ZoneOcc` AS t2 WHERE t1 . Zone = t2 . Zone AND TIMESTAMPADD ( HOUR , t1 . Hour , t1 . Date ) >= TIMESTAMPADD ( HOUR , HOUR ( t2 . start ), DATE ( t2 . start )) AND TIMESTAMPADD ( HOUR , t1 . Hour , t1 . Date ) <= TIMESTAMPADD ( HOUR , HOUR ( t2 . stop ), DATE ( t2 . stop ))); END 2. P_LCCI_02 CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `P_LCCI_02` ( IN `Pzone` varchar ( 50 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci , IN `Pstartdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci , IN `Pstopdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci ) DETERMINISTIC BEGIN /* Average useage profile calculations for LCCI and a selected zone between a given start and stop date. */ -- ********************************************************* -- * Set Parameters for averaging in the LCCI_Params table * -- ********************************************************* UPDATE LCCI_Params SET value = Pzone WHERE Param = \"Profile Zone Name\" ; UPDATE LCCI_Params SET value = Pstartdate WHERE Param = \"Profile Start Date\" ; UPDATE LCCI_Params SET value = Pstopdate WHERE Param = \"Profile Stop Date\" ; -- ******************************************************************************************** -- * Create a view for for the LCCI average profile between the selected start and stop dates * -- ******************************************************************************************** CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . v_lcci_profileavg ( `Zone` , `Hour` , `ZoneUse` ) AS SELECT \"LCCI Average\" AS `Zone` , t . `Hour` AS `Hour` , AVG ( t . `ZoneUse` ) AS `ZoneUse` FROM `OM_2101` . `LCCI_ZoneDailyProfile` AS t WHERE t . date >= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Start Date\" ), \"%d/%m/%y\" ) AND t . date <= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Stop Date\" ), \"%d/%m/%y\" ) GROUP BY Hour ; -- ******************************************************************************************** -- * Create a view for for the zone average profile between the selected start and stop dates * -- ******************************************************************************************** CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . v_zone_profileavg ( `Zone` , `Hour` , `ZoneUse` ) AS SELECT t . zone AS `Zone` , t . `Hour` AS `Hour` , AVG ( t . `ZoneUse` ) AS `ZoneUse` FROM `OM_2101` . `LCCI_ZoneDailyProfile` AS t WHERE t . `Zone` = ( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Zone Name\" ) AND t . date >= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Start Date\" ), \"%d/%m/%y\" ) AND t . date <= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Stop Date\" ), \"%d/%m/%y\" ) GROUP BY Hour ; END 3. P_LCCI_03 CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `P_LCCI_03` ( IN `Pdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci , IN `Pstartdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci , IN `Pstopdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci ) DETERMINISTIC BEGIN /* Average useage profile calculations for LCCI and a selected zone between a given start and stop date. */ -- ********************************************************* -- * Set Parameters for averaging in the LCCI_Params table * -- ********************************************************* UPDATE LCCI_Params SET value = Pdate WHERE Param = \"Profile Date\" ; UPDATE LCCI_Params SET value = Pstartdate WHERE Param = \"Profile Start Date\" ; UPDATE LCCI_Params SET value = Pstopdate WHERE Param = \"Profile Stop Date\" ; -- ******************************************************************************************** -- * Create a view for for the LCCI average profile between the selected start and stop dates * -- ******************************************************************************************** CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . v_lcci_profileavg ( `Zone` , `Hour` , `ZoneUse` ) AS SELECT \"LCCI Average\" AS `Zone` , t . `Hour` AS `Hour` , AVG ( t . `ZoneUse` ) AS `ZoneUse` FROM `OM_2101` . `LCCI_ZoneDailyProfile` AS t WHERE t . date >= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Start Date\" ), \"%d/%m/%y\" ) AND t . date <= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Stop Date\" ), \"%d/%m/%y\" ) GROUP BY Hour ; -- ******************************************************************* -- * Create a view for for the average profile on the specified date * -- ******************************************************************* CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . v_date_profileavg ( `Date` , `Hour` , `ZoneUse` ) AS SELECT t . Date AS `Date` , t . `Hour` AS `Hour` , AVG ( t . `ZoneUse` ) AS `ZoneUse` FROM `OM_2101` . `LCCI_ZoneDailyProfile` AS t WHERE t . date = str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Date\" ), \"%d/%m/%y\" ) GROUP BY Hour ; END 4. P_LCCI_04 CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `P_LCCI_04` ( IN `TWF` float , IN `TempMax` float ) DETERMINISTIC COMMENT 'Procedure to create a Temperature Average.' BEGIN /* Procedure for working with Temperatures. This could be adapted to handle any other spacially and time varying data. In this initial form an average temperature is calculated using the formula: Tav(t) = (Tav(t-1) * (1-TWF)) + (T(t) * TWF) where: Tav(t) is the average temperature at time 't' Tav(t-1) is the average temperature at the time prior to 't'. TWF is a weighting factor T(t) is the temperature at time 't' Parameters: TWF: Temperature Weighting Factor. See above TempMax: Temperatures above this value will be ignored i.e. they are assumed to be invalid. */ DROP TABLE IF EXISTS `OM_2101` . `LCCI_Temperature` ; CREATE TABLE `OM_2101` . `LCCI_Temperature` ( rid INT , datetime DATETIME ( 3 ), Location VARCHAR ( 50 ), Zone VARCHAR ( 50 ), Loc_Temp FLOAT , Office_Temp_Avg FLOAT ); INSERT INTO `OM_2101` . `LCCI_Temperature` SELECT rid , datetime , Location , Zone , Loc_Temp , Office_Temp_Avg FROM ( SELECT i . `DateTime` AS datetime , i . `Location` AS Location , i . `SensorType` , i . `Zone` AS Zone , i . `Value` AS Loc_Temp , @ TempAvg : = IF ( @ TempAvg IS NULL , i . `Value` , ( @ TempAvg * ( 1 - TWF ) + i . `Value` * TWF )) AS Office_Temp_Avg , @ counter : = IF ( @ counter IS NULL , 1 , @ counter + 1 ) AS rid FROM `OM_2101` . `OMevents` AS i WHERE i . `SensorType` LIKE \"%Temperature%\" AND i . `Value` < TempMax ORDER BY i . `DateTime` ASC ) AS tmp , ( SELECT @ TempAvg : = NULL , @ counter : = 0 ) AS vars ; END 5. LCCI_Do CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `LCCI_Do` () BEGIN -- ************************* -- * Do All LCCI Worksheet * -- ************************* /* Procedure for creating: lcci_zoneocc lcci_zonedailyprofile lcci_params Parameters: IgnoreWeekends 0 = False, 1 = True Normally week-ends should be ignored. Further enhancement is required to handle public holidays. */ Call P_LCCI_01 ( 1 ); /* Procedure for calculating profile averages: v_lcci_profileavg v_zone_profileavg Parameters: Profile Zone Name: The zone name for which the profile will be calculated Start Date: The date from which the calculations are made Stop Date: The date on which the calculations stop */ Call P_LCCI_02 ( \"Meeting Room 7\" , \"31/05/18\" , \"02/07/18\" ); /* Procedure for calculating profile averages: v_lcci_profileavg v_date_profileavg Parameters: Profile Date: The date for which the profile will be calculated Start Date: The date from which the calculations are made Stop Date: The date on which the calculations stop */ Call P_LCCI_03 ( \"27/06/18\" , \"31/05/18\" , \"02/07/18\" ); /* Procedure for working with Temperatures. This could be adapted to handle any other spacially and time varying data. The procedure creates a table om_main.LCCI_Temperature which extracts relevant information from om_ev.omevents. In this initial form an average office temperature is calculated using the formula: Tav(t) = (Tav(t-1) * (1-TWF)) + (T(t) * TWF) where: Tav(t) is the average temperature at time 't' Tav(t-1) is the average temperature at the time prior to 't'. TWF is a weighting factor T(t) is the temperature at time 't' Parameters: TWF: Temperature Weighting Factor. See above TempMax: Temperatures above this value will be ignored i.e. they are assumed to be invalid. */ Call P_LCCI_04 ( 0 . 02 , 100 ); END Problem on version 2 LCCI trigger not run, you can check these two tables; the table is not being updated, or the table empty, lcci_zonedailyprofile lcci_zoneocc for the rid field in lcci_temperature, this always showing increment 1 fix trigger not run re run and check 3 or more times make sure in processlist mysql should showing something like this, so it means lcci_zonedailyprofile has been created Do not wait; it takes 2 hours; you must may consider run in UK server instead of remote navicat 15635 | AdminDB | %:50080 | om_2101 | Query | 125 | Sending data | UPDATE `LCCI_ZoneDailyProfile` AS t1 SET zoneuse = (SELECT IFNULL( | 0.000 |","title":"Trigger"},{"location":"AlphaDev/Trigger/#trigger","text":"We have some procedure to run to create: lcci_zonedailyprofile lcci_zoneocc lcci_temperature","title":"Trigger"},{"location":"AlphaDev/Trigger/#1-p_lcci_01","text":"CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `P_LCCI_01` ( IN `IgnoreWeekends` tinyint ( 1 )) DETERMINISTIC BEGIN /* ******************************************************************* * Create table of parameters used primarily by the LCCI Dashboard * ******************************************************************* */ DROP TABLE IF EXISTS `OM_2101` . `LCCI_Params` ; CREATE TABLE `OM_2101` . `LCCI_Params` ( Param VARCHAR ( 30 ), Value VARCHAR ( 30 ) ); INSERT INTO `OM_2101` . `LCCI_Params` VALUES ( \"Profile Zone Name\" , \"Meeting Room 7\" ), ( \"Profile Start Date\" , \"01/06/18\" ), ( \"Profile Stop Date\" , \"30/06/18\" ), ( \"Profile Date\" , \"25/06/18\" ); /* ************************************************************** * Create table tracking only Occupancy Start and Stop times. * ************************************************************** */ DROP TABLE IF EXISTS `OM_2101` . `LCCI_ZoneOcc` ; CREATE TABLE `OM_2101` . `LCCI_ZoneOcc` ( Zone VARCHAR ( 50 ), start DATETIME ( 3 ), stop DATETIME ( 3 ), duration TIME ( 3 ) ); INSERT INTO `OM_2101` . `LCCI_ZoneOcc` SELECT Zone , start , stop , TIMEDIFF ( stop , start ) AS duration FROM ( SELECT Status , ( @ vzone <> Zone ) AS new_zone , @ vstart : = IF ( Status = \"Occ\" AND @ vstart IS NULL , `DateTime` , @ vstart ), @ vfirststart : = IF ( Status = \"Unocc\" , @ vstart , `DateTime` ) AS start , @ vstart : = IF ( Status = \"Unocc\" , NULL , @ vstart ), @ vstop : = IF ( Status = \"Unocc\" , `DateTime` , NULL ) AS stop , @ vzone : = Zone AS Zone FROM `OM_2101` . `OMzoneocc` -- WHERE Zone = \"Rectangular Table 1\" -- For debugging only ORDER BY Zone , `DateTime` ) AS tmp , ( SELECT @ vstart : = NULL , @ vfirststart : = NULL , @ vstop : = NULL , @ vzone : = NULL ) AS vars WHERE new_zone = 0 AND start IS NOT NULL AND stop IS NOT NULL ; -- ********************************* -- * Create a view of unique dates * -- ********************************* CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . `v_lcci_dates` ( date ) AS SELECT DISTINCT DATE ( `OM_2101` . `LCCI_ZoneOcc` . `start` ) AS `date` FROM `OM_2101` . `LCCI_ZoneOcc` ; -- ********************************* -- * Create a view of unique zones * -- ********************************* CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . `v_lcci_zones` ( zone ) AS SELECT DISTINCT `OM_2101` . `LCCI_ZoneOcc` . `zone` AS `zone` FROM `OM_2101` . `LCCI_ZoneOcc` ; -- ********************************************************************************************** -- * Cross join the zones and dates and hours to create a zone / date / hour / zoneuse template * -- ********************************************************************************************** DROP TABLE IF EXISTS `LCCI_ZoneDailyProfile` ; CREATE TABLE `LCCI_ZoneDailyProfile` ( Zone VARCHAR ( 50 ), Date DATE , Hour TINYINT , ZoneUse FLOAT ); INSERT INTO `LCCI_ZoneDailyProfile` SELECT OM_2101 . `v_lcci_zones` . zone AS Zone , OM_2101 . `v_lcci_dates` . date AS Date , myseq . seq AS Hour , 0 AS ZoneUse FROM seq_0_to_23 AS myseq JOIN OM_2101 . `v_lcci_dates` JOIN OM_2101 . `v_lcci_zones` WHERE NOT ( IgnoreWeekends = TRUE AND ( DAYOFWEEK ( Date ) = 1 OR DAYOFWEEK ( Date ) = 7 )); -- **************************************** -- * Populate lcci_zonedailyprofile table * -- **************************************** UPDATE `LCCI_ZoneDailyProfile` AS t1 SET zoneuse = ( SELECT IFNULL ( SUM ( DAILYPROFILE ( TIMESTAMPADD ( HOUR , t1 . Hour , t1 . Date ), TIMESTAMPADD ( HOUR , HOUR ( t2 . start ), DATE ( t2 . start )), TIMESTAMPADD ( HOUR , HOUR ( t2 . stop ), DATE ( t2 . stop )), t2 . start , t2 . stop , t2 . duration )), 0 ) FROM `LCCI_ZoneOcc` AS t2 WHERE t1 . Zone = t2 . Zone AND TIMESTAMPADD ( HOUR , t1 . Hour , t1 . Date ) >= TIMESTAMPADD ( HOUR , HOUR ( t2 . start ), DATE ( t2 . start )) AND TIMESTAMPADD ( HOUR , t1 . Hour , t1 . Date ) <= TIMESTAMPADD ( HOUR , HOUR ( t2 . stop ), DATE ( t2 . stop ))); END","title":"1. P_LCCI_01"},{"location":"AlphaDev/Trigger/#2-p_lcci_02","text":"CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `P_LCCI_02` ( IN `Pzone` varchar ( 50 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci , IN `Pstartdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci , IN `Pstopdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci ) DETERMINISTIC BEGIN /* Average useage profile calculations for LCCI and a selected zone between a given start and stop date. */ -- ********************************************************* -- * Set Parameters for averaging in the LCCI_Params table * -- ********************************************************* UPDATE LCCI_Params SET value = Pzone WHERE Param = \"Profile Zone Name\" ; UPDATE LCCI_Params SET value = Pstartdate WHERE Param = \"Profile Start Date\" ; UPDATE LCCI_Params SET value = Pstopdate WHERE Param = \"Profile Stop Date\" ; -- ******************************************************************************************** -- * Create a view for for the LCCI average profile between the selected start and stop dates * -- ******************************************************************************************** CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . v_lcci_profileavg ( `Zone` , `Hour` , `ZoneUse` ) AS SELECT \"LCCI Average\" AS `Zone` , t . `Hour` AS `Hour` , AVG ( t . `ZoneUse` ) AS `ZoneUse` FROM `OM_2101` . `LCCI_ZoneDailyProfile` AS t WHERE t . date >= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Start Date\" ), \"%d/%m/%y\" ) AND t . date <= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Stop Date\" ), \"%d/%m/%y\" ) GROUP BY Hour ; -- ******************************************************************************************** -- * Create a view for for the zone average profile between the selected start and stop dates * -- ******************************************************************************************** CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . v_zone_profileavg ( `Zone` , `Hour` , `ZoneUse` ) AS SELECT t . zone AS `Zone` , t . `Hour` AS `Hour` , AVG ( t . `ZoneUse` ) AS `ZoneUse` FROM `OM_2101` . `LCCI_ZoneDailyProfile` AS t WHERE t . `Zone` = ( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Zone Name\" ) AND t . date >= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Start Date\" ), \"%d/%m/%y\" ) AND t . date <= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Stop Date\" ), \"%d/%m/%y\" ) GROUP BY Hour ; END","title":"2. P_LCCI_02"},{"location":"AlphaDev/Trigger/#3-p_lcci_03","text":"CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `P_LCCI_03` ( IN `Pdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci , IN `Pstartdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci , IN `Pstopdate` varchar ( 30 ) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci ) DETERMINISTIC BEGIN /* Average useage profile calculations for LCCI and a selected zone between a given start and stop date. */ -- ********************************************************* -- * Set Parameters for averaging in the LCCI_Params table * -- ********************************************************* UPDATE LCCI_Params SET value = Pdate WHERE Param = \"Profile Date\" ; UPDATE LCCI_Params SET value = Pstartdate WHERE Param = \"Profile Start Date\" ; UPDATE LCCI_Params SET value = Pstopdate WHERE Param = \"Profile Stop Date\" ; -- ******************************************************************************************** -- * Create a view for for the LCCI average profile between the selected start and stop dates * -- ******************************************************************************************** CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . v_lcci_profileavg ( `Zone` , `Hour` , `ZoneUse` ) AS SELECT \"LCCI Average\" AS `Zone` , t . `Hour` AS `Hour` , AVG ( t . `ZoneUse` ) AS `ZoneUse` FROM `OM_2101` . `LCCI_ZoneDailyProfile` AS t WHERE t . date >= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Start Date\" ), \"%d/%m/%y\" ) AND t . date <= str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Stop Date\" ), \"%d/%m/%y\" ) GROUP BY Hour ; -- ******************************************************************* -- * Create a view for for the average profile on the specified date * -- ******************************************************************* CREATE OR REPLACE DEFINER = `AdminDB` @ `%` SQL SECURITY DEFINER VIEW OM_2101 . v_date_profileavg ( `Date` , `Hour` , `ZoneUse` ) AS SELECT t . Date AS `Date` , t . `Hour` AS `Hour` , AVG ( t . `ZoneUse` ) AS `ZoneUse` FROM `OM_2101` . `LCCI_ZoneDailyProfile` AS t WHERE t . date = str_to_date (( SELECT tp . value FROM LCCI_Params AS tp WHERE tp . param = \"Profile Date\" ), \"%d/%m/%y\" ) GROUP BY Hour ; END","title":"3. P_LCCI_03"},{"location":"AlphaDev/Trigger/#4-p_lcci_04","text":"CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `P_LCCI_04` ( IN `TWF` float , IN `TempMax` float ) DETERMINISTIC COMMENT 'Procedure to create a Temperature Average.' BEGIN /* Procedure for working with Temperatures. This could be adapted to handle any other spacially and time varying data. In this initial form an average temperature is calculated using the formula: Tav(t) = (Tav(t-1) * (1-TWF)) + (T(t) * TWF) where: Tav(t) is the average temperature at time 't' Tav(t-1) is the average temperature at the time prior to 't'. TWF is a weighting factor T(t) is the temperature at time 't' Parameters: TWF: Temperature Weighting Factor. See above TempMax: Temperatures above this value will be ignored i.e. they are assumed to be invalid. */ DROP TABLE IF EXISTS `OM_2101` . `LCCI_Temperature` ; CREATE TABLE `OM_2101` . `LCCI_Temperature` ( rid INT , datetime DATETIME ( 3 ), Location VARCHAR ( 50 ), Zone VARCHAR ( 50 ), Loc_Temp FLOAT , Office_Temp_Avg FLOAT ); INSERT INTO `OM_2101` . `LCCI_Temperature` SELECT rid , datetime , Location , Zone , Loc_Temp , Office_Temp_Avg FROM ( SELECT i . `DateTime` AS datetime , i . `Location` AS Location , i . `SensorType` , i . `Zone` AS Zone , i . `Value` AS Loc_Temp , @ TempAvg : = IF ( @ TempAvg IS NULL , i . `Value` , ( @ TempAvg * ( 1 - TWF ) + i . `Value` * TWF )) AS Office_Temp_Avg , @ counter : = IF ( @ counter IS NULL , 1 , @ counter + 1 ) AS rid FROM `OM_2101` . `OMevents` AS i WHERE i . `SensorType` LIKE \"%Temperature%\" AND i . `Value` < TempMax ORDER BY i . `DateTime` ASC ) AS tmp , ( SELECT @ TempAvg : = NULL , @ counter : = 0 ) AS vars ; END","title":"4. P_LCCI_04"},{"location":"AlphaDev/Trigger/#5-lcci_do","text":"CREATE DEFINER = `AdminDB` @ `%` PROCEDURE `LCCI_Do` () BEGIN -- ************************* -- * Do All LCCI Worksheet * -- ************************* /* Procedure for creating: lcci_zoneocc lcci_zonedailyprofile lcci_params Parameters: IgnoreWeekends 0 = False, 1 = True Normally week-ends should be ignored. Further enhancement is required to handle public holidays. */ Call P_LCCI_01 ( 1 ); /* Procedure for calculating profile averages: v_lcci_profileavg v_zone_profileavg Parameters: Profile Zone Name: The zone name for which the profile will be calculated Start Date: The date from which the calculations are made Stop Date: The date on which the calculations stop */ Call P_LCCI_02 ( \"Meeting Room 7\" , \"31/05/18\" , \"02/07/18\" ); /* Procedure for calculating profile averages: v_lcci_profileavg v_date_profileavg Parameters: Profile Date: The date for which the profile will be calculated Start Date: The date from which the calculations are made Stop Date: The date on which the calculations stop */ Call P_LCCI_03 ( \"27/06/18\" , \"31/05/18\" , \"02/07/18\" ); /* Procedure for working with Temperatures. This could be adapted to handle any other spacially and time varying data. The procedure creates a table om_main.LCCI_Temperature which extracts relevant information from om_ev.omevents. In this initial form an average office temperature is calculated using the formula: Tav(t) = (Tav(t-1) * (1-TWF)) + (T(t) * TWF) where: Tav(t) is the average temperature at time 't' Tav(t-1) is the average temperature at the time prior to 't'. TWF is a weighting factor T(t) is the temperature at time 't' Parameters: TWF: Temperature Weighting Factor. See above TempMax: Temperatures above this value will be ignored i.e. they are assumed to be invalid. */ Call P_LCCI_04 ( 0 . 02 , 100 ); END","title":"5. LCCI_Do"},{"location":"AlphaDev/Trigger/#problem-on-version-2-lcci","text":"trigger not run, you can check these two tables; the table is not being updated, or the table empty, lcci_zonedailyprofile lcci_zoneocc for the rid field in lcci_temperature, this always showing increment 1","title":"Problem on version 2 LCCI"},{"location":"AlphaDev/Trigger/#fix-trigger-not-run","text":"re run and check 3 or more times make sure in processlist mysql should showing something like this, so it means lcci_zonedailyprofile has been created Do not wait; it takes 2 hours; you must may consider run in UK server instead of remote navicat 15635 | AdminDB | %:50080 | om_2101 | Query | 125 | Sending data | UPDATE `LCCI_ZoneDailyProfile` AS t1 SET zoneuse = (SELECT IFNULL( | 0.000 |","title":"fix trigger not run"},{"location":"AlphaDev/UserManual/","text":"User Manual Dashboard Current Occupancy Status Display Occupancy status Live Data red: occupied green: empty Current Zone Temperature Display Temperature status Live Data red orange yellow green Average Hourly Occupancy Profile Noted: Automatically refresh each 2 minutes The refresh running forever as you see this page To Display Average Hourly Occupancy Profile Select Start Date Select End Date Click Search Icon Occupancy Player To Use Occupancy Player Select Start date Select end date Click search icon Pres play button To Search a Date Select Year from dropdown Select Month Select Day Click Search Icon Office Analytics Occupancy Average Hourly Occupancy Profile Display average coccupancy of the desk for specific date To display Average Hourly Occupancy Profile Select Year Select Month Select Day Click search icon Occupancy: Daily Display average coccupancy Daily To display Occupancy Daily Select Start Date Select End Date Click search icon Temperature Temperature Average between two dates To Display average coccupancy of the desk between two dates Select Start Date Select End Date Click search icon Average Temperature specific date To Display average coccupancy specific date in hourly range Select Year Select Month Select Day Click search icon Zone Analytics Popularity by zone To Display Popularity by zone Select Start Date Select End Date Click Search Icon Average Daily Occupancy Profile To Display Average Daily Occupancy Profile Click zone in the picture Select Start Date Select End Date Click Search Icon System Status To Do Filter Select type Select status Select zone Select Sort by Click Search Icon * Initially/after reset/after refresh it will only display 12 records * Click More Records button to load more data * Click Reset button to reset order by Status, Lastupdate * Automatically refresh each 2 minutes","title":"User Manual"},{"location":"AlphaDev/UserManual/#user-manual","text":"","title":"User Manual"},{"location":"AlphaDev/UserManual/#dashboard","text":"","title":"Dashboard"},{"location":"AlphaDev/UserManual/#current-occupancy-status","text":"Display Occupancy status Live Data red: occupied green: empty","title":"Current Occupancy Status"},{"location":"AlphaDev/UserManual/#current-zone-temperature","text":"Display Temperature status Live Data red orange yellow green","title":"Current Zone Temperature"},{"location":"AlphaDev/UserManual/#average-hourly-occupancy-profile","text":"Noted: Automatically refresh each 2 minutes The refresh running forever as you see this page","title":"Average Hourly Occupancy Profile"},{"location":"AlphaDev/UserManual/#to-display-average-hourly-occupancy-profile","text":"Select Start Date Select End Date Click Search Icon","title":"To Display Average Hourly Occupancy Profile"},{"location":"AlphaDev/UserManual/#occupancy-player","text":"","title":"Occupancy Player"},{"location":"AlphaDev/UserManual/#to-use-occupancy-player","text":"Select Start date Select end date Click search icon Pres play button","title":"To Use Occupancy Player"},{"location":"AlphaDev/UserManual/#to-search-a-date","text":"Select Year from dropdown Select Month Select Day Click Search Icon","title":"To Search a Date"},{"location":"AlphaDev/UserManual/#office-analytics","text":"","title":"Office Analytics"},{"location":"AlphaDev/UserManual/#occupancy","text":"","title":"Occupancy"},{"location":"AlphaDev/UserManual/#average-hourly-occupancy-profile_1","text":"Display average coccupancy of the desk for specific date","title":"Average Hourly Occupancy Profile"},{"location":"AlphaDev/UserManual/#to-display-average-hourly-occupancy-profile_1","text":"Select Year Select Month Select Day Click search icon","title":"To display Average Hourly Occupancy Profile"},{"location":"AlphaDev/UserManual/#occupancy-daily","text":"Display average coccupancy Daily","title":"Occupancy: Daily"},{"location":"AlphaDev/UserManual/#to-display-occupancy-daily","text":"Select Start Date Select End Date Click search icon","title":"To display Occupancy Daily"},{"location":"AlphaDev/UserManual/#temperature","text":"","title":"Temperature"},{"location":"AlphaDev/UserManual/#temperature-average-between-two-dates","text":"To Display average coccupancy of the desk between two dates Select Start Date Select End Date Click search icon","title":"Temperature Average between two dates"},{"location":"AlphaDev/UserManual/#average-temperature-specific-date","text":"To Display average coccupancy specific date in hourly range Select Year Select Month Select Day Click search icon","title":"Average Temperature specific date"},{"location":"AlphaDev/UserManual/#zone-analytics","text":"","title":"Zone Analytics"},{"location":"AlphaDev/UserManual/#popularity-by-zone","text":"To Display Popularity by zone Select Start Date Select End Date Click Search Icon","title":"Popularity by zone"},{"location":"AlphaDev/UserManual/#average-daily-occupancy-profile","text":"To Display Average Daily Occupancy Profile Click zone in the picture Select Start Date Select End Date Click Search Icon","title":"Average Daily Occupancy Profile"},{"location":"AlphaDev/UserManual/#system-status","text":"","title":"System Status"},{"location":"AlphaDev/UserManual/#to-do-filter","text":"Select type Select status Select zone Select Sort by Click Search Icon * Initially/after reset/after refresh it will only display 12 records * Click More Records button to load more data * Click Reset button to reset order by Status, Lastupdate * Automatically refresh each 2 minutes","title":"To Do Filter"},{"location":"AlphaDev/configuration&setting/","text":"Configuration&Setting Configuration & Setting Overview Firstly, copied MariaDB database from Raspberry Pi to windows server MariaDB. Secondly, we copied views, functions and procedure to copied database. Third, updated our views in LCCI_DB to refer copied database. After tables, views, functions and procedures completed, we test run procedure. As it finished, Check lcci_zoneocc and lcci_zonedailyprofile has been generated successfully. Fixing alpha components is the next we took, mostly it was connection string changes; for example change database name from om_main to om_2101. Other changed is some fields name; we found some fieldname change for example Node_ID1 to Node_ID , LastUpdate1 to LastUpdate. After everything seems good, we went to setup replication in windows server MariaDB. Firstly we have to give unique server_id then put MariaDB Master detail to configuration file in this case my.ini file. You might need to restart MariaDB. Check if Slave process started ; Lastly, if the data has been replicated successfully. The last step when replication running we change live data connection string to Windows Server. Improvement current occupancy status current zone temperature, and systems status getting from data from windows server, it reduce Rasbery Pi call for big amount for live data. Live data seems pretty fast as it get data from windows server When rasberry pi offline due to WIFI dongle issue system status and other live data still looks fine, before when rasberry pi goes offline users will get loads longer before it throw red errors like : can't connect 10.8.0.42; now it still display data even if it is not latest data Procedure still required scheduled start at 3:00 AM. It takes around 2 hours, check lcci_zoneocc and lcci_zonedailyprofile. Do not stop the process call lcci_doAll when you test it manually or there will be duplicate procedure running. You can check by run: show processlist; normally 1 line saying query updating lcci_zonedailyprofile Demo Smartdesk LCCI UK Copying the Database Copy MDBbu.sql.tar.gz \\10.8.0.42\\mariadbbackup Create database Om_2101 Restore database from dump file (it takes longer please wait) mysql.exe -uroot -pseaford -hlocalhost OM_2101 < C:\\easy-pc\\files\\home\\occmon\\Mariadb\\data_backup\\MDBbu.sql Copy view to create chart to OM_2101 Edit view in LCCI_DB; change referenced database to OM_OM_2101 Copy procedure and function to do create tables lcci_zoneocc and lcci_zonedailyprofile Check procedure by running call LCCI_DoAll Check if procedure success Make sure no query update running, that one indicator procedure has been finished, show processlist ; Check these table lcci_zoneocc and lcci_zonedailyprofile has current date Setting up Replication Go to server MariaDB Edit my.ini Add unique server_id Save Configuration Restart MariaDB on Windows Server Add detail MariaDB of Raspberry Pi as Master change master to MASTER_HOST = \u2019 10 . 8 . 0 . 42 \u2019 , MASTER_USER = 'omrepuser' , MASTER_PASSWORD = 'OCCupancy' , MASTER_PORT = 3306 , MASTER_LOG_FILE = \u2018 mysqld - bin . 000006 \u2019 , MASTER_LOG_POS = 328 , MASTER_CONNECT_RETRY = 10 ; 7. Check if replication has been running Run command to start replication START SLAVE ; 8. Run to check if replication running SHOW SLAVE STATUS \\ G ; Make sure that: Slave_IO_Running: Yes Slave_SQL_Running: Yes Check in the table OM_events: 1. Compare OM_events in Raspberry Pi and Windows Server, 2. check the DateTime field , if success you will see exact same records between Rasberry Pi and Windows Server MariaDB. 3. Don't forget to refresh your navicat for both table at the same time so the record will be exactly the same. Fixing the Components Edit connection string in Alpha Five Change field name refer to new database; eg. Node_ID1 to Node_ID , LastUpdate1 to LastUpdate Publish server to development server Deploy to Production Server http://smartdesk.ddns.net/tim/admin.a5w Check components display as expected For Mobile We do the same as desktop components mostly changing connection string to copied database (om_2101)","title":"Configuration&Setting"},{"location":"AlphaDev/configuration&setting/#configurationsetting","text":"","title":"Configuration&amp;Setting"},{"location":"AlphaDev/configuration&setting/#configuration-setting-overview","text":"Firstly, copied MariaDB database from Raspberry Pi to windows server MariaDB. Secondly, we copied views, functions and procedure to copied database. Third, updated our views in LCCI_DB to refer copied database. After tables, views, functions and procedures completed, we test run procedure. As it finished, Check lcci_zoneocc and lcci_zonedailyprofile has been generated successfully. Fixing alpha components is the next we took, mostly it was connection string changes; for example change database name from om_main to om_2101. Other changed is some fields name; we found some fieldname change for example Node_ID1 to Node_ID , LastUpdate1 to LastUpdate. After everything seems good, we went to setup replication in windows server MariaDB. Firstly we have to give unique server_id then put MariaDB Master detail to configuration file in this case my.ini file. You might need to restart MariaDB. Check if Slave process started ; Lastly, if the data has been replicated successfully. The last step when replication running we change live data connection string to Windows Server.","title":"Configuration &amp; Setting Overview"},{"location":"AlphaDev/configuration&setting/#improvement","text":"current occupancy status current zone temperature, and systems status getting from data from windows server, it reduce Rasbery Pi call for big amount for live data. Live data seems pretty fast as it get data from windows server When rasberry pi offline due to WIFI dongle issue system status and other live data still looks fine, before when rasberry pi goes offline users will get loads longer before it throw red errors like : can't connect 10.8.0.42; now it still display data even if it is not latest data Procedure still required scheduled start at 3:00 AM. It takes around 2 hours, check lcci_zoneocc and lcci_zonedailyprofile. Do not stop the process call lcci_doAll when you test it manually or there will be duplicate procedure running. You can check by run: show processlist; normally 1 line saying query updating lcci_zonedailyprofile Demo Smartdesk LCCI UK","title":"Improvement"},{"location":"AlphaDev/configuration&setting/#copying-the-database","text":"Copy MDBbu.sql.tar.gz \\10.8.0.42\\mariadbbackup Create database Om_2101 Restore database from dump file (it takes longer please wait) mysql.exe -uroot -pseaford -hlocalhost OM_2101 < C:\\easy-pc\\files\\home\\occmon\\Mariadb\\data_backup\\MDBbu.sql Copy view to create chart to OM_2101 Edit view in LCCI_DB; change referenced database to OM_OM_2101 Copy procedure and function to do create tables lcci_zoneocc and lcci_zonedailyprofile Check procedure by running call LCCI_DoAll Check if procedure success Make sure no query update running, that one indicator procedure has been finished, show processlist ; Check these table lcci_zoneocc and lcci_zonedailyprofile has current date","title":"Copying the Database"},{"location":"AlphaDev/configuration&setting/#setting-up-replication","text":"Go to server MariaDB Edit my.ini Add unique server_id Save Configuration Restart MariaDB on Windows Server Add detail MariaDB of Raspberry Pi as Master change master to MASTER_HOST = \u2019 10 . 8 . 0 . 42 \u2019 , MASTER_USER = 'omrepuser' , MASTER_PASSWORD = 'OCCupancy' , MASTER_PORT = 3306 , MASTER_LOG_FILE = \u2018 mysqld - bin . 000006 \u2019 , MASTER_LOG_POS = 328 , MASTER_CONNECT_RETRY = 10 ; 7. Check if replication has been running Run command to start replication START SLAVE ; 8. Run to check if replication running SHOW SLAVE STATUS \\ G ; Make sure that: Slave_IO_Running: Yes Slave_SQL_Running: Yes Check in the table OM_events: 1. Compare OM_events in Raspberry Pi and Windows Server, 2. check the DateTime field , if success you will see exact same records between Rasberry Pi and Windows Server MariaDB. 3. Don't forget to refresh your navicat for both table at the same time so the record will be exactly the same.","title":"Setting up Replication"},{"location":"AlphaDev/configuration&setting/#fixing-the-components","text":"Edit connection string in Alpha Five Change field name refer to new database; eg. Node_ID1 to Node_ID , LastUpdate1 to LastUpdate Publish server to development server Deploy to Production Server http://smartdesk.ddns.net/tim/admin.a5w Check components display as expected For Mobile We do the same as desktop components mostly changing connection string to copied database (om_2101)","title":"Fixing the Components"},{"location":"AlphaDev/repairlogbin/","text":"Repair Log Bin 1. Problem Log Bin not sync after master reset Problem after mariadb restart, replication not sync this happen because log bin master corrupt fix replication not sync: Reset Slave Manually change to latest log bin Check OMevents; make sure last update field synchronized","title":"Repair Log Bin"},{"location":"AlphaDev/repairlogbin/#repair-log-bin","text":"","title":"Repair Log Bin"},{"location":"AlphaDev/repairlogbin/#1-problem-log-bin-not-sync-after-master-reset","text":"Problem after mariadb restart, replication not sync this happen because log bin master corrupt","title":"1. Problem Log Bin not sync after master reset"},{"location":"AlphaDev/repairlogbin/#fix-replication-not-sync","text":"Reset Slave Manually change to latest log bin Check OMevents; make sure last update field synchronized","title":"fix replication not sync:"}]}